name: Build-debian
on:
  workflow_dispatch:

jobs:
  prepare_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYYMMDD-HHmm'
      - name: Create empty release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.time.outputs.time }}
          body_path: VERSION
          token: ${{ secrets.GITHUB_TOKEN }}
          target_commitish: main
          draft: false
    outputs:
      release_id: ${{ steps.release.outputs.id }}
  build:
    runs-on: ubuntu-20.04
    needs: prepare_release
    strategy:
      matrix:
        BOARD: [licheepi-4a]
        DISTRO: [armbian]
        FLAVOR: [debian]
        BRANCH: [current]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clean environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set +e
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential gcc-riscv64-linux-gnu asciidoc binutils bzip2 gawk gettext git libncurses5-dev msmtp libssl-dev texinfo libglib2.0-dev
          sudo -E apt-get -y install patch python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex node-uglify git gcc-multilib p7zip p7zip-full xmlto libreadline-dev
          sudo -E apt-get -y install python3 python3-pip python3-pyelftools haveged lrzsz scons ecj fastjar re2c xz-utils tar binutils ccache curl wget vim nano rsync coreutils
          sudo -E apt-get -y install qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig  gcc g++
          wget http://ftp.cn.debian.org/debian/pool/main/d/debian-ports-archive-keyring/debian-ports-archive-keyring_2023.02.01_all.deb
          sudo dpkg -i debian-ports-archive-keyring_2023.02.01_all.deb
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
      - name: Upload Armbian image
        uses: chainsx/armbian-compile-action@risc-v
        if: matrix.DISTRO == 'armbian'
        with:
          branch: ${{ matrix.BRANCH }}
          board: ${{ matrix.BOARD }}
          flavor: ${{ matrix.FLAVOR }}
          release-id: ${{ needs.prepare_release.outputs.release_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
